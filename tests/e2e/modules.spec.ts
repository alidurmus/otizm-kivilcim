import { test, expect } from '@playwright/test';

test.describe('Kƒ±vƒ±lcƒ±m Mod√ºl Se√ßimi', () => {
  test('mod√ºl sayfasƒ± doƒüru y√ºklenmeli', async ({ page }) => {
    await page.goto('/modules');
    
        // Sayfa ba≈ülƒ±ƒüƒ±nƒ± kontrol et - Mobile Safari i√ßin timeout artƒ±rƒ±ldƒ±
    await expect(page.getByRole('heading', { name: 'Geli≈üim Mod√ºlleri' })).toBeVisible({ timeout: 10000 });

    // A√ßƒ±klama metnini kontrol et
    await expect(page.getByText('Hangi alanda geli≈ümek istiyorsun?')).toBeVisible({ timeout: 10000 });
  });

  test('mod√ºl kartlarƒ± etkile≈üimli olmalƒ±', async ({ page }) => {
    await page.goto('/modules');
    
    // Okuryazarlƒ±k mod√ºl√ºn√ºn g√∂r√ºn√ºr olduƒüunu kontrol et - ger√ßek sayfada heading olarak
    await expect(page.getByRole('heading', { name: 'Okuryazarlƒ±k Becerileri' })).toBeVisible();
    
    // Mod√ºl a√ßƒ±klamasƒ±nƒ±n g√∂r√ºn√ºr olduƒüunu kontrol et
    await expect(page.getByText('Harf tanƒ±ma, hece olu≈üturma ve okuma becerilerini geli≈ütirin')).toBeVisible();
    
    // BA≈ûLA butonlarƒ±nƒ±n g√∂r√ºn√ºr olduƒüunu kontrol et
    const baslaButtons = page.getByRole('button', { name: 'BA≈ûLA' });
    await expect(baslaButtons.first()).toBeVisible();
    await expect(baslaButtons.first()).toBeEnabled();
  });

  test('t√ºm mod√ºller aktif olmalƒ±', async ({ page }) => {
    await page.goto('/modules');
    
    // T√ºm mod√ºllerin aktif olduƒüunu kontrol et - ger√ßek sayfada t√ºm mod√ºller BA≈ûLA butonu ile aktif (heading olarak)
    await expect(page.getByRole('heading', { name: 'Anlam ve Kelime Daƒüarcƒ±ƒüƒ±' })).toBeVisible();
    await expect(page.getByRole('heading', { name: 'Sosyal ƒ∞leti≈üim' })).toBeVisible();
    await expect(page.getByRole('heading', { name: 'Yazma ve ƒ∞fade Etme' })).toBeVisible();
    await expect(page.getByRole('heading', { name: 'Temel Kavramlar' })).toBeVisible();
    await expect(page.getByRole('heading', { name: 'M√ºzik Dinleme Odasƒ±' })).toBeVisible();
    await expect(page.getByRole('heading', { name: 'Video ƒ∞zleme Odasƒ±' })).toBeVisible();
    
    // T√ºm mod√ºllerde BA≈ûLA butonlarƒ±nƒ±n olduƒüunu kontrol et
    const baslaButtons = page.getByRole('button', { name: 'BA≈ûLA' });
    await expect(baslaButtons).toHaveCount(7); // 7 aktif mod√ºl
  });

  test('mod√ºl BA≈ûLA butonuna tƒ±klayƒ±nca egzersiz sayfasƒ±na gitmeli', async ({ page }) => {
    await page.goto('/modules');
    
    // ƒ∞lk BA≈ûLA butonuna tƒ±kla (Okuryazarlƒ±k Becerileri mod√ºl√º)
    const baslaButtons = page.getByRole('button', { name: 'BA≈ûLA' });
    await baslaButtons.first().click();
    
    // Egzersiz sayfasƒ±na y√∂nlendirildiƒüini kontrol et - timeout artƒ±rƒ±ldƒ±
    await expect(page).toHaveURL('/exercise/literacy', { timeout: 10000 });
  });

  test('geli≈üim durumu g√∂stergesi doƒüru olmalƒ±', async ({ page }) => {
    await page.goto('/modules');
    
    // Geli≈üim durumu kartƒ±nƒ± kontrol et
    await expect(page.getByRole('heading', { name: 'üéØ Geli≈üim Durumun' })).toBeVisible();
    
    // ƒ∞statistikleri kontrol et - ger√ßek sayfadaki deƒüerler (daha spesifik locator)
    await expect(page.locator('div.text-2xl.font-bold').filter({ hasText: '7' })).toBeVisible(); // Aktif mod√ºl sayƒ±sƒ±
    await expect(page.locator('div.text-sm.text-adaptive-secondary').filter({ hasText: 'Aktif Mod√ºl' })).toBeVisible();
    await expect(page.locator('div.text-2xl.font-bold').filter({ hasText: '0' })).toBeVisible(); // Yakƒ±nda gelecek sayƒ±sƒ±
    await expect(page.locator('div.text-sm.text-adaptive-secondary').filter({ hasText: 'Yakƒ±nda Gelecek' })).toBeVisible();
    
    // Motivasyon mesajƒ±nƒ± kontrol et - ger√ßek sayfadaki mesaj
    await expect(page.getByText('7 mod√ºl aktif! Herhangi birini se√ßerek √∂ƒürenmeye ba≈ülayabilirsin! üåü')).toBeVisible();
  });

  test('navigasyon butonlarƒ± √ßalƒ±≈ümalƒ±', async ({ page }) => {
    await page.goto('/modules');
    
        // Ana sayfaya d√∂n butonu - timeout artƒ±rƒ±ldƒ±
    await page.getByRole('button', { name: '‚Üê Ana Sayfa' }).click();
    await expect(page).toHaveURL('/', { timeout: 10000 });

    // Tekrar mod√ºl sayfasƒ±na git
    await page.goto('/modules');

    // Ebeveyn paneli butonu - ger√ßek sayfadaki text
    await page.getByRole('button', { name: 'Ebeveyn Paneli' }).click();
    await expect(page).toHaveURL('/parent', { timeout: 10000 });
  });

  test('kƒ±vƒ±lcƒ±m ipucu mesajƒ± g√∂r√ºn√ºr olmalƒ±', async ({ page }) => {
    await page.goto('/modules');
    
    // ƒ∞pucu mesajƒ±nƒ± kontrol et
    await expect(page.getByText('ƒ∞pucu:')).toBeVisible();
    await expect(page.getByText('Kƒ±vƒ±lcƒ±m sana yol g√∂sterecek')).toBeVisible();
    
    // Mikrofon ikonu g√∂r√ºn√ºr olmalƒ±
    await expect(page.getByText('üéôÔ∏è')).toBeVisible();
  });

  test('mod√ºl kartlarƒ± animasyonlu y√ºklenmeli', async ({ page }) => {
    await page.goto('/modules');
    
    // T√ºm mod√ºl kartlarƒ±nƒ±n g√∂r√ºn√ºr olmasƒ±nƒ± bekle
    await expect(page.getByText('Okuryazarlƒ±k Becerileri')).toBeVisible();
    await expect(page.getByText('Anlam ve Kelime Daƒüarcƒ±ƒüƒ±')).toBeVisible();
    await expect(page.getByText('Sosyal ƒ∞leti≈üim')).toBeVisible();
    await expect(page.getByText('Yazma ve ƒ∞fade Etme')).toBeVisible();
  });

  test('mobil responsive tasarƒ±m √ßalƒ±≈ümalƒ±', async ({ page }) => {
    await page.setViewportSize({ width: 375, height: 667 });
    await page.goto('/modules');
    
    // Mobilde de t√ºm elementler g√∂r√ºn√ºr olmalƒ±
    await expect(page.getByRole('heading', { name: 'Geli≈üim Mod√ºlleri' })).toBeVisible();
    await expect(page.getByRole('button', { name: '‚Üê Ana Sayfa' })).toBeVisible();
    await expect(page.getByRole('button', { name: 'Ebeveyn Paneli' })).toBeVisible();
    
    // Mod√ºl kartlarƒ± mobilde de d√ºzg√ºn g√∂r√ºnmeli
    await expect(page.getByText('Okuryazarlƒ±k Becerileri')).toBeVisible();
  });
}); 